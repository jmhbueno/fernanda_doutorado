round(sw_apesemo$statistic, digits = 2),
round(sw_adptest$statistic, digits = 2),
round(sw_adptins$statistic, digits = 2),
round(sw_totalsc$statistic, digits = 2)),
"p.valor" = c(round(sw_projcar$p.value, digits = 2),
round(sw_adptsoc$p.value, digits = 2),
round(sw_apesemo$p.value, digits = 2),
round(sw_adptest$p.value, digits = 2),
round(sw_adptins$p.value, digits = 2),
round(sw_totalsc$p.value, digits = 2)),
Assimetria = c(round(skew(qaes_projcar_reg$residuals), digits = 2),
round(skew(qaes_adptsoc_reg$residuals), digits = 2),
round(skew(qaes_apesemo_reg$residuals), digits = 2),
round(skew(qaes_adptest_reg$residuals), digits = 2),
round(skew(qaes_adptins_reg$residuals), digits = 2)),
round(skew(qaes_total_reg$residuals), digits = 2),
Curtose = c(round(kurtosi(qaes_projcar_reg$residuals),digits = 2),
round(kurtosi(qaes_adptsoc_reg$residuals),digits = 2),
round(kurtosi(qaes_apesemo_reg$residuals),digits = 2),
round(kurtosi(qaes_adptest_reg$residuals),digits = 2),
round(kurtosi(qaes_adptins_reg$residuals),digits = 2),
round(kurtosi(qaes_total_reg$residuals), digits = 2)))
data.frame(Variáveis = c("Projeto de Carreira",
"Adaptação Social",
"Adapação pessoal/emocional",
"Adaptação ao estudo",
"Adaptação à Instituição",
"QAES-TOTAL"),
"Shapiro-Wilk(W)" = c(round(sw_projcar$statistic, digits = 2),
round(sw_adptsoc$statistic, digits = 2),
round(sw_apesemo$statistic, digits = 2),
round(sw_adptest$statistic, digits = 2),
round(sw_adptins$statistic, digits = 2),
round(sw_totalsc$statistic, digits = 2)),
"p.valor" = c(round(sw_projcar$p.value, digits = 2),
round(sw_adptsoc$p.value, digits = 2),
round(sw_apesemo$p.value, digits = 2),
round(sw_adptest$p.value, digits = 2),
round(sw_adptins$p.value, digits = 2),
round(sw_totalsc$p.value, digits = 2)),
Assimetria = c(round(skew(qaes_projcar_reg$residuals), digits = 2),
round(skew(qaes_adptsoc_reg$residuals), digits = 2),
round(skew(qaes_apesemo_reg$residuals), digits = 2),
round(skew(qaes_adptest_reg$residuals), digits = 2),
round(skew(qaes_adptins_reg$residuals), digits = 2)),
round(skew(qaes_total_reg$residuals), digits = 2)),
Curtose = c(round(kurtosi(qaes_projcar_reg$residuals),digits = 2),
round(kurtosi(qaes_adptsoc_reg$residuals),digits = 2),
round(kurtosi(qaes_apesemo_reg$residuals),digits = 2),
round(kurtosi(qaes_adptest_reg$residuals),digits = 2),
round(kurtosi(qaes_adptins_reg$residuals),digits = 2),
round(kurtosi(qaes_total_reg$residuals), digits = 2)))
data.frame(Variáveis = c("Projeto de Carreira",
"Adaptação Social",
"Adapação pessoal/emocional",
"Adaptação ao estudo",
"Adaptação à Instituição",
"QAES-TOTAL"),
"Shapiro-Wilk(W)" = c(round(sw_projcar$statistic, digits = 2),
round(sw_adptsoc$statistic, digits = 2),
round(sw_apesemo$statistic, digits = 2),
round(sw_adptest$statistic, digits = 2),
round(sw_adptins$statistic, digits = 2),
round(sw_totalsc$statistic, digits = 2)),
"p.valor" = c(round(sw_projcar$p.value, digits = 2),
round(sw_adptsoc$p.value, digits = 2),
round(sw_apesemo$p.value, digits = 2),
round(sw_adptest$p.value, digits = 2),
round(sw_adptins$p.value, digits = 2),
round(sw_totalsc$p.value, digits = 2)),
Assimetria = c(round(skew(qaes_projcar_reg$residuals), digits = 2),
round(skew(qaes_adptsoc_reg$residuals), digits = 2),
round(skew(qaes_apesemo_reg$residuals), digits = 2),
round(skew(qaes_adptest_reg$residuals), digits = 2),
round(skew(qaes_adptins_reg$residuals), digits = 2),
round(skew(qaes_total_reg$residuals), digits = 2)),
Curtose = c(round(kurtosi(qaes_projcar_reg$residuals),digits = 2),
round(kurtosi(qaes_adptsoc_reg$residuals),digits = 2),
round(kurtosi(qaes_apesemo_reg$residuals),digits = 2),
round(kurtosi(qaes_adptest_reg$residuals),digits = 2),
round(kurtosi(qaes_adptins_reg$residuals),digits = 2),
round(kurtosi(qaes_total_reg$residuals), digits = 2)))
plot(qaes_projcar_reg)
par(mfrow=c(1,1))
plot(qaes_projcar_reg)
par(mfrow=c(1,1))
plot(qaes_projcar_reg)
plot(qaes_projcar_reg$residuals)
plot(qaes_projcar_reg$df.residual)
plot(qaes_projcar_reg)
qaes_projcar_reg
qaes_projcar_reg$residuals
qaes_projcar_reg$residuals %>% rstatix::identify_outliers()
data.frame(res = qaes_projcar_reg$residuals) %>% rstatix::identify_outliers(res)
qaes_projcar_reg$residuals
data.frame(res = qaes_projcar_reg$residuals) %>% rstatix::identify_outliers(res)
data.frame(res = qaes_adptsoc_reg$residuals) %>% rstatix::identify_outliers(res)
data.frame(res = qaes_apesemo_reg$residuals) %>% rstatix::identify_outliers(res)
qaes_apesemo_reg
#Projeto de Carreira ====
######
qaes_projcar_reg <- lm(qaes_projcar ~
tre_efi+tre_ine +
extrover +
neurotic +
conscien +
amabilid,
data = df2,
na.action = na.omit)
## Ausência de Multicolinearidade
### Multicolinearidade: r > 0.9 (ou 0.8)
########
#Adaptação Social ====
######
qaes_adptsoc_reg <- lm(qaes_adptsoc ~
extrover +
neurotic +
conscien +
abertura +
amabilid,
data = df2,
na.action = na.omit)
#Adaptação pessoal emocional =====
#######
qaes_apesemo_reg <- lm(qaes_apesemo ~
extrover +
neurotic +
conscien,
data = df2,
na.action = na.omit)
## Ausência de Multicolinearidade
### Multicolinearidade: r > 0.9 (ou 0.8)
######
#Adaptação ao estudo ====
######
qaes_adptest_reg <- lm(qaes_adptest ~
extrover +
neurotic +
conscien +
abertura +
amabilid,
data = df2,
na.action = na.omit)
#Adaptação a instituição ====
##########
qaes_adptins_reg <- lm(qaes_adptins ~
extrover +
conscien +
amabilid,
data = df2,
na.action = na.omit)
## Ausência de Multicolinearidade
### Multicolinearidade: r > 0.9 (ou 0.8)
######
###### QAES-Total ====
qaes_total_reg <- lm(qaes_totalsc~
extrover +
conscien +
neurotic+
amabilid,
data = df2,
na.action = na.omit)
data.frame(res = qaes_projcar_reg$residuals) %>% rstatix::identify_outliers(res)
data.frame(res = qaes_adptsoc_reg$residuals) %>% rstatix::identify_outliers(res)
data.frame(res = qaes_apesemo_reg$residuals) %>% rstatix::identify_outliers(res)
qaes_apesemo_reg
data.frame(res = qaes_apesemo_reg$residuals) %>% rstatix::identify_outliers(res)
data.frame(res = qaes_adptest_reg$residuals) %>% rstatix::identify_outliers(res)
data.frame(res = qaes_adptins_reg$residuals) %>% rstatix::identify_outliers(res)
data.frame(res = qaes_total_reg$residuals) %>% rstatix::identify_outliers(res)
describe(df2$qaes_projcar)
describe(df2$qaes_projcar) %>% pander()
hist(df2$qaes_projcar)
hist(df2$qaes_projcar,breaks = 15)
hist(df2$qaes_projcar,breaks = 20)
hist(df2$qaes_projcar,breaks = 20)
data.frame(res = qaes_projcar_reg$residuals) %>% rstatix::identify_outliers(res)
df2 %>% slice(!c(151,152))
rlang::last_error()
df2 %>% slice(!151,!152)
# Para eliminar sujeitos
glimpse(df2)
df2 %>% slice(1:10)
df2 %>% slice(-c(151,152))
só_pra_ver <- df2 %>% slice(-c(151,152))
glimpse(só_pra_ver)
#Projeto de Carreira ====
######
qaes_projcar_reg <- lm(qaes_projcar ~
tre_efi+tre_ine +
extrover +
neurotic +
conscien +
amabilid,
data = só_pra_ver,
na.action = na.omit)
## Normalidade dos resíduos:
shapiro.test(qaes_projcar_reg$residuals)
#Assimetria e Curtose
skew(qaes_projcar_reg$residuals)
kurtosi(qaes_projcar_reg$residuals)
## Outliers nos resíduos:
summary(rstandard(qaes_projcar_reg))
data.frame(res = qaes_projcar_reg$residuals) %>% rstatix::identify_outliers(res)
#Projeto de Carreira ====
######
qaes_projcar_reg <- lm(qaes_projcar ~
tre_efi+tre_ine +
extrover +
neurotic +
conscien +
amabilid,
data = df2,
na.action = na.omit)
citation()
citation(psych)
library(psych)
citation(psych)
citation("psych")
citation("mirt")
tce
library(tidyverse)
library(psych)
library(knitr)
qaes_projcar_reg <- lm(qaes_projcar ~
tre_efi+tre_ine +
extrover +
neurotic +
conscien +
amabilid,
data = df2,
na.action = na.omit)
summary(qaes_projcar_reg)
qaes_projcar_reg$coefficients
qaes_projcar_reg$effects
library(tidyverse)
library(psych)
library(knitr)
library(GPArotation) # Pacote para rotacao analise fatorial.
library(readxl)
library(lavaan)
names(df2)
corrplot(matriz, method = "color", type = 'lower', order = 'FPC',
addCoef.col = 'black')
library(corrplot)
corrplot(matriz, method = "color", type = 'lower', order = 'FPC',
addCoef.col = 'black')
correlations$stars
# heatmap(correlations$r)
# round(correlations,digits = 2) %>% kable()
round(correlations$r, digits = 3) %>% kable()
round(correlations$p, digits = 3) %>% kable()
corrplot(correlations$r, method = "color", type = 'upper', order = 'hclust',
addCoef.col = 'black')
library(pander)
correlations$stars %>% pander()
correlations$stars
corrplot(correlations$r, method = "color", type = 'upper', order = 'hclust',
addCoef.col = 'black')
# heatmap(correlations$r)
# round(correlations,digits = 2) %>% kable()
round(correlations$r, digits = 3) %>% kable()
correlations$stars
names(df2) %>% data.frame()
correlations <- corr.test(df2[177:186],df2[c(10,171:176)], method = 'pearson')
correlations$stars
correlations <- corr.test(df2[c(10,177:186)],df2[c(171:176)], method = 'pearson')
correlations$stars
corr_qaes <- corr.test(df2[c(177:186)],df2[c(171:176)], method = 'pearson')
corr_qaes$stars
corr_medg <- corr.test(df2[c(177:186)],df2$mediag, method = 'pearson')
corr_medg$stars
corr_medg$stars %>% kable()
corr_qaes_medg <- corr.test(df2[c(171:176)],df2$mediag, method = 'pearson')
corr_qaes_medg$stars %>% kable()
correlations <- corr.test(df2[c(177:186)],df2[c(171:176)], method = 'pearson')
correlations$stars
corr_qaes$stars
corr_qaes$stars %>% kable()
summary(qaes_adptest_reg)
plot(qaes_adptest_reg)
mediag_reg <- lm(qaes_adptest ~
extrover +
neurotic +
conscien +
abertura +
amabilid,
data = df2,
na.action = na.omit)
summary(mediag_reg)
mediag_reg <- lm(mediag ~ qaes_adptest +
extrover +
neurotic +
conscien +
abertura +
amabilid +
rv,
data = df2,
na.action = na.omit)
summary(mediag_reg)
write.csv(df2, "data_fernanda.csv")
glimpse(df2)
library(tidyverse)
library(psych)
library(knitr)
library(readxl)
names(df2)
glimpse(df2)
names(df2) %>% as.data.frame()
df2 %>% select(97:108) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(97:108) %>%
fa(nfactors = 1, rotate = "oblimin", fm = "uls", cor = "poly")
df2 %>% select(97:108) %>%
fa(nfactors = 1, rotate = "geominQ", fm = "uls", cor = "poly")
?scree.test()
?scree()
# ==== ANÁLISES DA PROVA DE RV PARA TÉCNICAS PSICOMÉTRICAS
df2 %>% select(97:108) %>%
scree(factors = TRUE, pc = FALSE, )
df2 %>% select(97:108) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(97:108) %>% count()
df2 %>% select(97) %>% count()
count(df2,97)
count(df2,rv1)
count(df2,rv1:rv12)
names(df2) %>% as.data.frame()
df2 %>% select(c(98:100,102,103,105,106,108)) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(c(98:102,103,105,106,108)) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(c(98:100,102,103,105,106,108)) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(97:108) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(c(98:100,102,105,106,108)) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(c(98:100,102,105,106,108)) %>% alpha()
df2 %>% df2 %>% select(c(98:100,102,103,105,106,108)) %>% alpha()
df2 %>% select(c(98:100,102,103,105,106,108)) %>% alpha()
df2 %>% select(c(97:108)) %>% alpha()
# FIDEDIGNIDADE
?alpha()
df2 %>% select(c(97:108)) %>% alpha(na.rm = TRUE, delete = TRUE)
df2 %>% select(c(98:100,102,105,106,108)) %>% corr.test()
rv_cor_matrix <- df2 %>% select(c(98:100,102,105,106,108)) %>% corr.test()
corr.test()
corr.test
?corr.test()
library(tidyverse)
library(psych)
library(knitr)
library(readxl)
df2 %>% select(98:108) %>%
scree(factors = TRUE, pc = FALSE)
df2 %>% select(98:108) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(c(98:100,102,103,105,106,108)) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(c(98:102,103,105,106,108)) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(c(98:100,102,103,105,106,108)) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
rv_cor_matrix <- df2 %>% select(c(98:100,102,103,105,106,108)) %>% polichoric()
rv_cor_matrix$t
alpha(rv_cor_matrix, na.rm = TRUE, delete = TRUE)
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
df2 %>% select(c(98:100,102,103,105,106,108)) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
rv_cor_matrix <- df2 %>% select(c(98:100,102,103,105,106,108)) %>% polychoric()
alpha(rv_cor_matrix, na.rm = TRUE, delete = TRUE)
alpha(rv_cor_matrix$rho, na.rm = TRUE, delete = TRUE)
names(df2) %>% as.data.frame()
df2 %>% select(c(98:100,102,103,105,106,108)) %>% rowSums()
df2$rv_8itens <- df2 %>% select(c(98:100,102,103,105,106,108)) %>% rowSums()
hist(df2$rv_8itens)
round(pnorm(seq(from=1,by=1,length=8),
mean(df2$rv_8itens),
sd(df2$rv_8itens))*100,2)
mean(df2$rv_8itens)
sd(df2$rv_8itens)
df2 %>% select(98:108) %>%
scree(factors = TRUE, pc = FALSE)
df2 %>% select(c(98:100,102,103,105,106,108)) %>%
fa(nfactors = 1, rotate = "varimax", fm = "uls", cor = "poly")
alpha(rv_cor_matrix$rho, na.rm = TRUE, delete = TRUE)
data.frame("Pontuação bruta" = c(1,2,3,4,5,6,7,8),
"Percentis" = round(pnorm(seq(from=1,by=1,length=8),
mean(df2$rv_8itens),
sd(df2$rv_8itens))*100,2))
data.frame("Escores"   = c(1,2,3,4,5,6,7,8),
"Percentis" = round(pnorm(seq(from=1,by=1,length=8),
mean(df2$rv_8itens),
sd(df2$rv_8itens))*100,2))
data.frame("Escores"   = c(1,2,3,4,5,6,7,8),
"Percentis" = round(pnorm(seq(from=1,by=1,length=8),
mean(df2$rv_8itens),
sd(df2$rv_8itens))*100,0))
(df2$rv_8itens - mean(df2$rv_8itens)/sd(df2$rv_8itens)
((df2$rv_8itens - mean(df2$rv_8itens))/sd(df2$rv_8itens))
((df2$rv_8itens - mean(df2$rv_8itens))/sd(df2$rv_8itens))*15 + 100
round(((df2$rv_8itens - mean(df2$rv_8itens))/sd(df2$rv_8itens))*15 + 100),1)
round(((df2$rv_8itens - mean(df2$rv_8itens))/sd(df2$rv_8itens))*15 + 100)
round(((df2$rv_8itens - mean(df2$rv_8itens))/sd(df2$rv_8itens))*15 + 100,1)
round(((df2$rv_8itens - mean(df2$rv_8itens))/sd(df2$rv_8itens))*15 + 100)
data.frame("Escores"   = c(1,2,3,4,5,6,7,8),
"Percentis" = round(pnorm(seq(from=1,by=1,length=8),
mean(df2$rv_8itens),
sd(df2$rv_8itens))*100,0),
RPadronizado= round(((c(1,2,3,4,5,6,7,8) - mean(df2$rv_8itens))/sd(df2$rv_8itens))*15 + 100))
glimpse(df2)
df2 %>%                                     # pega o objeto (dataframe) df2
summarise(                                # e aplica a funcao summarise, que monta uma tabela com os dados solicitados
média_idade = mean(df2$idade, na.rm = T), # que, nesse caso, são: 1) a media da idade, removendo os dados ausentes (NA)
desvio_padrão = sd(df2$idade, na.rm = T)) # e o desvio padrao da idade, removendo os dados ausentes (NA)
range(df2$idade) # reporta o menor e o maior valor da variável
nclass.Sturges(df2$idade)# em quantas categorias eu poderia classificar a variável idade
table(cut(df2$idade,seq(15,65,l = 10))) # cria uma tabela por classes de idade
describe(df2$idade) # comando do pacote psych, que ja traz uma serie de estatisticas descritivas
describeBy(df2[ ,c("idade","mediag")],group = df2$genero) # describeBy: estatística descritiva por grupo, no caso "genero"
describeBy(df2[ ,c("idade","mediag")],group = df2$cor)
describeBy(df2[ ,c("idade","mediag")],group = df2$genero:df2$cor) # comando para agrupar por genero e cor
idade_table <- df2$idade %>% table() %>% as.data.frame()
idade_table$"%" <- idade_table$Freq %>% prop.table()*100
amostra_nota_media
df2 %>% count(genero)
df2 %>% count(cor)
amostra_sexo_cor
df2 %>% count(genero) mutate("%" = n/sum(n)*100)
df2 %>% count(genero) %>% mutate("%" = n/sum(n)*100)
df2 %>% count(cor) %>% mutate("%" = n/sum(n)*100)
library(tidyverse)
library(psych)
library(knitr)
summary(df2$rv_8itens)
df2$rv_8itens
rv_cor_matrix <- df2 %>% select(c(98:100,102,103,105,106,108)) %>% polychoric()
alpha(rv_cor_matrix$rho, na.rm = TRUE, delete = TRUE)
df2$rv_8itens <- df2 %>% select(c(98:100,102,103,105,106,108)) %>% rowSums()
normas_rv <- round(pnorm(seq(from=1,by=1,length=8),
mean(df2$rv_8itens),
sd(df2$rv_8itens))*100,2)
round(((df2$rv_8itens - mean(df2$rv_8itens))/sd(df2$rv_8itens))*15 + 100)
data.frame("Escores"   = c(1,2,3,4,5,6,7,8),
"Percentis" = round(pnorm(seq(from=1,by=1,length=8),
mean(df2$rv_8itens),
sd(df2$rv_8itens))*100,0),
RPadronizado= round(((c(1,2,3,4,5,6,7,8) - mean(df2$rv_8itens))/sd(df2$rv_8itens))*15 + 100))
summary(df2$rv_8itens)
janitor::tabyl(df2$rv_8itens) %>% pander::pander()
describe(df2$rv_8itens, na.rm = TRUE) %>% pander::pander()
mean(df2$rv_8itens) + sd(df2$rv_8itens)
mean(df2$rv_8itens) + sd(df2$rv_8itens)
mean(df2$rv_8itens) - sd(df2$rv_8itens)
library(tidyverse)
library(psych)
library(knitr)
hist(df2$mediag)
skew(df2$mediag)
kurtosi(df2$mediag)
count(df2,mediag)
df2 %>% slice(!mediag == 0) %>% count(mediag)
df2 %>% slice(!mediag == 0)
rlang::last_error()
df2 %>% filter(-c(mediag == 0))
df2 %>% !filter(mediag == 0)
df2 %>% filter(mediag == 0)
df2 %>% filter(mediag == !0)
df2 %>% filter(mediag == !0) %>% count(mediag)
data_frame <- df2 %>% filter(mediag == !0)
count(data_frame,mediag)
count(data_frame,mediag)
?hist
hist(df2$mediag,breaks = 10)
hist(df2$mediag,breaks = 7)
hist(df2$mediag)
library(tidyverse)
library(psych)
library(knitr)
glimpse(df2)
names(df2[ ,1:60])
names(qaes)
names(qaes)
# variável apesemo calculada de forma invertida, porque é a única variável em que os itens estão invertidos.
# A pontuação no fator ficou com os itens NÂO INVERTIDOS. Ou seja, a pontuação nesse fator está ao contrário dos demais.
qaes <- qaes %>% mutate(apesemo_inve = (48-a4+a9+a14+a19+a39+a29+a34+a24)/8)
library(tidyverse)
library(psych)
library(knitr)
# variável apesemo calculada de forma invertida, porque é a única variável em que os itens estão invertidos.
# A pontuação no fator ficou com os itens NÂO INVERTIDOS. Ou seja, a pontuação nesse fator está ao contrário dos demais.
qaes <- qaes %>% mutate(apesemo_inve = (48-a4+a9+a14+a19+a39+a29+a34+a24)/8)
rely_qaes_apesemo<-qaes %>% select(4,9,14,19,39,29,34,24) %>% omega(poly=TRUE,key = c(-1,-1,-1,-1,-1,-1,-1,-1))
rely_qaes_totalsc<-qaes %>% select(41,42,44:46) %>% omega(poly=F)
library(tidyverse)
library(psych)
library(GPArotation) # Pacote para rotacao analise fatorial.
library(knitr)
corrplot(matriz, method = "color", type = 'lower', order = 'FPC',
addCoef.col = 'black')
corr_qaes$stars %>% kable()
corr_medg <- corr.test(df2[c(177:187)],df2$mediag, method = 'pearson')
corr_medg$stars %>% kable()
corr.test(df2[171:176],df2[10], method = 'pearson') %>% pander
corr.test(df2[171:176],df2[10], method = 'pearson') %>% pander
corr.test(df2[171:176],df2[10], method = 'pearson') %>% pander::pander
names(df2) %>% as.data.frame()
corr.test(df2[171:176], df2[181:185]) %>% pander:pander()
library(pander)
corr.test(df2[171:176], df2[181:185]) %>% pander()
corr.test(df2[,171:176], df2[,181:185])
